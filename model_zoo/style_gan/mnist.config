import numpy as np
from connectome import CacheToRam, Apply
from dpipe.im import zoom_to_shape

from model_zoo.style_gan import StyleGenerator, StyleDiscriminator
from model_zoo.utils import MNISTSource

dataset = MNISTSource('~/data/MNIST') >> Apply(
    image=lambda x: zoom_to_shape(np.float32(x) * (2 / 255) - 1, 32, axis=(0, 1))) >> CacheToRam()

latent_dim = 3
style_dim = 512
generator = StyleGenerator(latent_dim, 512, 16, 3, 1, mapping_levels=3, style_dim=style_dim)
discriminator = StyleDiscriminator(1, 16, 512, 3)

lr_discriminator = 1e-3
lr_generator = 1e-4
disc_iters = 1
batch_size = 16
batches_per_epoch = 100
n_epochs = 1000
r1_weight = 10
